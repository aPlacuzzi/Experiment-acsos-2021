# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        # Install additional packages
      - name: Configure Linux
        shell: bash
        run: |
          if [ -x .github/scripts/configure_linux ]; then
            .github/scripts/configure_linux
          fi
      - name: Upgrade pip
        run: pip install --upgrade pip --user
      - name: Install requirements
        run: pip install -r requirements.txt --user
      - name: Prepare charts folder
        run: mkdir -p charts
      - name: Generate charts
        run: python process.py
      - name: Crop charts
        run: |
          ls -l .
          ls -l ./charts
          find charts -name "*.pdf" -exec pdfcrop --clip {} {} \;
      - name: Generate archive
        run: tar -czvf "charts.tar.gz" -C charts/
      - name: Create tag
        run: |
          curl -sL https://github.com/DanySK/Gravis-CI/raw/master/autotag > autotag
          chmod +x autotag
          ./autotag
      - name: Configure git
        run: |
          git config --global user.email "andrea.placuzzi@unibo.it"
          git config --global user.name "aPlacuzzi"
      - name: Populate TAG environment variables
        shell: bash
        run: |
          TAG=$(git describe --tags --exact-match HEAD || echo '')
          echo "Current tag is: '$TAG' (setup in the TAG environment variable)"
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: Deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: hub release create -a "charts.tar.gz" -m "$(git tag -l --format='%(contents)' "$TAG")" "$TAG" || true
